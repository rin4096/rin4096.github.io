<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Arch Linux WSL2 安裝筆記</title>
    <link href="/arch-wsl/"/>
    <url>/arch-wsl/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>之前安裝雙系統Arch感覺太麻煩，加上我對Linux需求不大，就開始使用WSL來作爲補充了。現在主要是在WSL寫blog，然後就沒有了，畢竟我不是程序猿，加上我菜菜，安裝這一部分都copy來的再加上一點修改。</p><p>來個neofetch<br><img src="/img/arch-wsl/1.png" alt="1" title="截圖"></p><h1 id="安裝前準備"><a href="#安裝前準備" class="headerlink" title="安裝前準備"></a>安裝前準備</h1><p>先安裝個Windows Terminal，這個東西是比較好用且好看的terminal了。</p><p>再安裝powershell 7.</p><p>使用管理員powershell啓用WSL</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">dism.exe <span class="hljs-string">/online</span> <span class="hljs-string">/enable-feature</span> <span class="hljs-string">/featurename</span><span class="hljs-function">:Microsoft-Windows-Subsystem-Linux</span> <span class="hljs-string">/all</span> <span class="hljs-string">/norestart</span><br></code></pre></td></tr></table></figure><p>然後輸入這一行啓用虛擬平臺然後重啓</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">dism.exe <span class="hljs-string">/online</span> <span class="hljs-string">/enable-feature</span> <span class="hljs-string">/featurename</span><span class="hljs-function">:VirtualMachinePlatform</span> <span class="hljs-string">/all</span> <span class="hljs-string">/norestart</span><br></code></pre></td></tr></table></figure><p>然後<a href="https://link.zhihu.com/?target=https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi">在這裏</a>下載Linux内核升級包並安裝。</p><p>然後在管理員pswh設置wsl版本為2</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs actionscript">wsl --<span class="hljs-keyword">set</span>-<span class="hljs-keyword">default</span>-version <span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><h2 id="安裝scoop"><a href="#安裝scoop" class="headerlink" title="安裝scoop"></a>安裝scoop</h2><p>scoop是Windows下的包管理軟件，方便對一些免安裝軟件的一鍵（一行）安裝，十分方便。<br>打開powershell 7，輸入</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">Invoke-Expression (New-Object System.Net.WebClient).<span class="hljs-constructor">DownloadString(&#x27;<span class="hljs-params">https</span>:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-params">get</span>.<span class="hljs-params">scoop</span>.<span class="hljs-params">sh</span>&#x27;)</span><br>#安裝scoop<br></code></pre></td></tr></table></figure><p>添加Extra repo</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-keyword">scoop </span><span class="hljs-keyword">bucket </span><span class="hljs-keyword">add </span><span class="hljs-keyword">extras</span><br></code></pre></td></tr></table></figure><h2 id="安裝LxRunOffline"><a href="#安裝LxRunOffline" class="headerlink" title="安裝LxRunOffline"></a>安裝LxRunOffline</h2><p>只要一句話即可搞定</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-keyword">scoop </span><span class="hljs-keyword">install </span>lxrunoffline<br></code></pre></td></tr></table></figure><h1 id="安裝Arch-Linux-WSL"><a href="#安裝Arch-Linux-WSL" class="headerlink" title="安裝Arch Linux WSL"></a>安裝Arch Linux WSL</h1><p>先準備文件夾放Arch Linux，如我放在c盤根目錄。</p><p>然後從<a href="https://mirrors.tuna.tsinghua.edu.cn/archlinux/iso/latest/">清華tuna源</a>下載Arch Linux bootstrap iso。</p><p>下載好之後在Powershell 7中敲打</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">LxRunOffline</span> i -n &lt;您喜歡的系統名&gt; -f &lt;Arch iso位置目錄&gt; -d &lt;安裝系統的位置&gt; -r root.x<span class="hljs-number">86</span>_<span class="hljs-number">64</span><br><span class="hljs-comment">#示例</span><br><span class="hljs-attribute">LxRunOffline</span> i -n ArchLinux -f C:\Users\rin\Downloads\archlinux-bootstrap-<span class="hljs-number">2021</span>.<span class="hljs-number">06</span>.<span class="hljs-number">01</span>-x<span class="hljs-number">86</span>_<span class="hljs-number">64</span>.tar.gz -d C:\ArchLinux -r root.x<span class="hljs-number">86</span>_<span class="hljs-number">64</span><br></code></pre></td></tr></table></figure><p>完成後就系統裝好了</p><p>最後需要將系統設置成wsl2</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stata">wsl --<span class="hljs-keyword">set</span>-<span class="hljs-keyword">version</span> ArchLinux 2<br># wsl --<span class="hljs-keyword">set</span>-<span class="hljs-keyword">version</span> &lt;您自定義的系統名&gt; 2<br></code></pre></td></tr></table></figure><h1 id="配置系統"><a href="#配置系統" class="headerlink" title="配置系統"></a>配置系統</h1><p>先進系統</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs dts">wsl -d <span class="hljs-params">&lt;您自定義的系統名&gt;</span><br><span class="hljs-meta">#如</span><br>wsl -d ArchLinux<br></code></pre></td></tr></table></figure><p>然後刪除/etc/resolv.conf</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">rm <span class="hljs-regexp">/etc/</span>resolv.conf<br></code></pre></td></tr></table></figure><p>重啓虛擬機</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-keyword">exit</span><br><span class="hljs-comment">#退出</span><br>wsl --shutdown ArchLinux <br><span class="hljs-comment">#關閉虛擬機，記得改爲您的系統名</span><br>wsl -d ArchLinux<br><span class="hljs-comment">#再次進入系統，同理系統名改爲成您的</span><br></code></pre></td></tr></table></figure><h2 id="添加軟件源及安裝必要軟件"><a href="#添加軟件源及安裝必要軟件" class="headerlink" title="添加軟件源及安裝必要軟件"></a>添加軟件源及安裝必要軟件</h2><p>在Arch中輸入</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">cd <span class="hljs-regexp">/etc/</span><br>explorer.exe .<br><span class="hljs-comment">#打開文件資源管理器方便操作</span><br></code></pre></td></tr></table></figure><p>找到<code>pacman.conf</code>利用記事本或vs code打開進行修改，在最後添加:</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">[archlinuxcn]<br>Server = https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/archlinuxcn/</span><span class="hljs-variable">$arch</span><br></code></pre></td></tr></table></figure><p>然後在<code>/etc/pacman.d/</code>中找到<code>mirrorlist</code>，用vs code打開，將喜愛的中國内的源的注釋（也就是#）打掉</p><p>然後在Terminal執行以下操作</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs csharp">pacman -Syy<br>pacman-key --<span class="hljs-keyword">init</span><br>pacman-key --populate<br>pacman -S archlinuxcn-keyring<br>pacman -S <span class="hljs-keyword">base</span> <span class="hljs-keyword">base</span>-devel vim git wget yay neofetch zsh nano<br></code></pre></td></tr></table></figure><h2 id="設置賬戶"><a href="#設置賬戶" class="headerlink" title="設置賬戶"></a>設置賬戶</h2><p>先給root賬戶設置密碼，在Terminal輸入</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">passwd</span><br></code></pre></td></tr></table></figure><p>然後建立普通賬戶</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs dts">useradd -m -G wheel -s <span class="hljs-meta-keyword">/bin/</span>bash <span class="hljs-params">&lt;用户名&gt;</span><br>passwd <span class="hljs-params">&lt;用户名&gt;</span><br></code></pre></td></tr></table></figure><p>然後将文件<code>/etc/sudoers</code>中的<code>%wheel ALL=(ALL) ALL</code>那一行前面的注释(#)去掉</p><p>查看当前用户id，記下這個id</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript"><span class="hljs-built_in">id</span> -u &lt;用户名&gt;<br></code></pre></td></tr></table></figure><p>然後按exit退出系統，在powershell執行</p><figure class="highlight bnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bnf">lxrunoffline su -n <span class="hljs-attribute">&lt;您的arch名字&gt;</span> -v <span class="hljs-attribute">&lt;用戶id&gt;</span><br></code></pre></td></tr></table></figure><h2 id="對Shell做人性化處理"><a href="#對Shell做人性化處理" class="headerlink" title="對Shell做人性化處理"></a>對Shell做人性化處理</h2><p>前面安裝了zsh，直接安裝oh my zsh。接下來就是一氣呵成配置了。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk">sh -c <span class="hljs-string">&quot;$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot;</span><br><span class="hljs-comment">#安裝oh my zsh</span><br>git clone --depth=<span class="hljs-number">1</span> https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/romkatv/</span>powerlevel10k.git <span class="hljs-variable">$&#123;ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom&#125;</span><span class="hljs-regexp">/themes/</span>powerlevel10k<br><span class="hljs-comment">#安裝powerlevel10k主題</span><br></code></pre></td></tr></table></figure><p>在<code> ~/.zshrc</code>設置</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs crmsh"><span class="hljs-attr">ZSH_THEME=</span><span class="hljs-string">&quot;powerlevel10k/powerlevel10k&quot;</span><br><span class="hljs-attr">plugins=</span>(git archlinux adb npm <span class="hljs-keyword">node</span> <span class="hljs-title">zsh-syntax-highlighting</span> zsh-autosuggestions zsh-completions)<br><span class="hljs-comment">#為zsh-completions在文件最下面加上這句話</span><br>autoload -U compinit &amp;&amp; compinit<br></code></pre></td></tr></table></figure><p>然後安裝部分上述插件</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs awk">git clone https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/zsh-users/</span>zsh-syntax-highlighting.git <span class="hljs-variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span><span class="hljs-regexp">/plugins/</span>zsh-syntax-highlighting<br><span class="hljs-comment">#安裝zsh-syntax-highlighting</span><br>git clone https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/zsh-users/</span>zsh-autosuggestions <span class="hljs-variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span><span class="hljs-regexp">/plugins/</span>zsh-autosuggestions<br><span class="hljs-comment">#安裝zsh-autosuggestions</span><br>git clone https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/zsh-users/</span>zsh-completions <span class="hljs-variable">$&#123;ZSH_CUSTOM:=~/.oh-my-zsh/custom&#125;</span><span class="hljs-regexp">/plugins/</span>zsh-completions<br><span class="hljs-comment">#安裝zsh-completions</span><br></code></pre></td></tr></table></figure><p>這樣就大功告成了</p><h2 id="未解決的bug"><a href="#未解決的bug" class="headerlink" title="未解決的bug"></a>未解決的bug</h2><p>即使安裝了powerline字體還是無法顯示powerline的特殊字符，讓我覺得奇怪</p><h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><p><a href="https://zhuanlan.zhihu.com/p/266585727">https://zhuanlan.zhihu.com/p/266585727</a><br><a href="https://ohmyz.sh/">https://ohmyz.sh/</a><br><a href="https://github.com/ohmyzsh/ohmyzsh/wiki/Plugins">https://github.com/ohmyzsh/ohmyzsh/wiki/Plugins</a><br><a href="https://github.com/zsh-users/zsh-syntax-highlighting">https://github.com/zsh-users/zsh-syntax-highlighting</a><br><a href="https://github.com/zsh-users/zsh-autosuggestions/blob/master/INSTALL.md">https://github.com/zsh-users/zsh-autosuggestions/blob/master/INSTALL.md</a><br><a href="https://github.com/zsh-users/zsh-completions">https://github.com/zsh-users/zsh-completions</a></p>]]></content>
    
    
    <categories>
      
      <category>技術貼</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Arch Linux</tag>
      
      <tag>WSL</tag>
      
      <tag>scoop</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2020年終總結</title>
    <link href="/end-of-2020/"/>
    <url>/end-of-2020/</url>
    
    <content type="html"><![CDATA[<p>今年算是最壞的一年了，回想起疫病爆發之初到現在，時間過得還挺快的。上學期上的網課跟沒上一樣，渾渾噩噩過了整個上半年。暑假游歷中國西南與長三角，算是今年沒得出國的一點補償吧。水了一整個暑假后就開學，水課特別多，就覺得自己究竟在學啥玩意，我就經常跟別人開退學的玩笑。</p><h2 id="買買買進展"><a href="#買買買進展" class="headerlink" title="買買買進展"></a>買買買進展</h2><p>今年算是我的電子設備大采購的年份了，算下來買了這些玩意：</p><ul><li>iPad Pro 2020</li><li>Oneplus 8 pro</li><li>Pimax VR 8K Plus with Index controllers</li><li>LG 27GN950</li><li>SONY IER-M9</li><li>桌上型電腦（5950x+3090+64G+5Tssd）</li><li>iPhone 12 Pro<br>iPad本來是想拿來打arcaea的，我玩的太菜了，現在主要拿來拿去上課跟做筆記用，有時拿來看電子書。</li></ul><p>VR的確很好用，完爆99%的商場裏面的設備，最主要的體現就是在定位准，視野廣。玩beat saber直接上天。</p><p>今年抛棄了垃圾的雷電3，把顯卡塢賣了，用賺來的錢買了桌機。爽是爽了，但這樣就讓我的筆電就沒有什麽用武之地了。我在想什麽時候Apple能推出2in1的設備，這樣就可以把我的筆電跟iPad出了，出門就只用帶一臺設備就可以了。</p><h2 id="訊息的攝取方式的轉變"><a href="#訊息的攝取方式的轉變" class="headerlink" title="訊息的攝取方式的轉變"></a>訊息的攝取方式的轉變</h2><p>隨著中國的語言文化圈的變化，新聞再也不是新聞了，標題越來越像是博人眼球的東西，内容卻沒什麽營養，純粹是拿來浪費時間的。但中文世界還是有一些資源是我想推薦的。去年HK發生的那一堆事情已經讓我對政治感到疲勞了，什麽蘋果動新聞，立場新聞這種帶有偏見的民主派媒體我已經幾乎不看了。我只想説這些年發生的東西對誰都沒有好處，有的都是悲劇。</p><h3 id="財新"><a href="#財新" class="headerlink" title="財新"></a>財新</h3><p>這東西要錢，但原創新聞的質量應該是業界最好的了，在中國國内可能就只有這個媒體能看了。</p><h3 id="《二十一世紀》"><a href="#《二十一世紀》" class="headerlink" title="《二十一世紀》"></a>《二十一世紀》</h3><p>CUHK發行的社會科學雜誌，這東西直接郵寄到府，内容十分精彩，值得閲讀。</p><h3 id="路透"><a href="#路透" class="headerlink" title="路透"></a>路透</h3><p>我還是個英文文盲，於是閲讀英文這方面我還是得去提升一下。。。。。路透中文比較偏向於宏觀經濟類的，也是一個挺不錯的新聞來源。</p><h3 id="WSJ"><a href="#WSJ" class="headerlink" title="WSJ"></a>WSJ</h3><p>在黑五訂閲了，看看新聞質量怎樣，以後再説。</p><h2 id="2021的想法"><a href="#2021的想法" class="headerlink" title="2021的想法"></a>2021的想法</h2><p>今年雖然爆發疫病，每個人都想把今年過掉，進入2021這一嶄新的一頁，但黎明之前還是黑暗，我希望明年再也不會像是今年一樣那麽bullshit了。2020這麽渾渾噩噩，天天摸魚浪費了大把時間，希望2021能管好自己，過一個更加充實的一年吧。</p><h2 id="2021年的目標"><a href="#2021年的目標" class="headerlink" title="2021年的目標"></a>2021年的目標</h2><ul><li>把IELTS搞好</li><li>把N3給考了</li><li>好好的學經濟學</li><li>希望能玩到美股</li><li>煎牛排的技藝更上一層樓</li></ul>]]></content>
    
    
    <categories>
      
      <category>吹水日常</category>
      
    </categories>
    
    
    <tags>
      
      <tag>2020年</tag>
      
      <tag>總結</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>筆記本電腦接入Thunderbolt eGPU淺度體驗</title>
    <link href="/ex-graphic-card/"/>
    <url>/ex-graphic-card/</url>
    
    <content type="html"><![CDATA[<p>換了Blog框架之後我就想寫一篇水文了，那就弄一篇壕文好了。</p><p>在2019年考入大學之後，我當時就夢想著這樣的情景：在宿舍接上顯卡塢揮發接近臺式機的性能，要出去上課的時候只要把綫纜拔掉就可以出門了。性能需求與便携的需求都可以滿足。但還是並不如意，我只想説我并不推薦這種玩法。</p><h2 id="裝備清單"><a href="#裝備清單" class="headerlink" title="裝備清單"></a>裝備清單</h2><p>以下是我在2019年買的電子產品拿來跑TB3。</p><h3 id="xps-15-2019版"><a href="#xps-15-2019版" class="headerlink" title="xps 15 2019版"></a>xps 15 2019版</h3><p>這一臺筆電配置了一個滿速雷劈3端口，可以接TB3設備。</p><h3 id="Razor-Core-幻彩版"><a href="#Razor-Core-幻彩版" class="headerlink" title="Razor Core 幻彩版"></a>Razor Core 幻彩版</h3><p>這個顯卡塢可以插上任何長度滿槽顯卡，而且配備了4個USB 3.1 Gen1與一個以太網接口（雖然用不到），内置電源完全足夠性能釋放。</p><h3 id="4k顯示屏"><a href="#4k顯示屏" class="headerlink" title="4k顯示屏"></a>4k顯示屏</h3><p>外接顯示屏看著爽，而且這不會有内屏降低性能的問題。</p><h3 id="鼠標與鍵盤"><a href="#鼠標與鍵盤" class="headerlink" title="鼠標與鍵盤"></a>鼠標與鍵盤</h3><p>這是必備的外接設備，插在顯卡塢上。</p><h3 id="RTX-2080ti-顯示卡"><a href="#RTX-2080ti-顯示卡" class="headerlink" title="RTX 2080ti 顯示卡"></a>RTX 2080ti 顯示卡</h3><p>最重要的配件了。</p><h2 id="體驗"><a href="#體驗" class="headerlink" title="體驗"></a>體驗</h2><p>先描述一下配置</p><ul><li>CPU：i9-9980hk</li><li>RAM：64GB DDR4@2666 SODIMM</li><li>GPU：ASUS ROG STRIX 2080ti OC<br>跑分并不怎樣，FSE跑了10761， time spy跑了7345，這當做一個參考吧。而且這個雷劈三的帶寬除了顯卡還有其他硬件占用著這個通道導致帶寬沒法完全用在顯卡上。</li></ul><p>由於我比較宅，經常宅在宿舍，有了這個大顯示屏去圖書館幹嘛，在宿舍生產力就已經高的恐怖了。（這好像跟顯卡沒有什麽關係）</p><p>在游戲上的體驗肯定會比筆電上的GTX1650好很多，尤其是在跑大型游戲中，比如FS2020。</p><h2 id="不足"><a href="#不足" class="headerlink" title="不足"></a>不足</h2><h3 id="死機問題（已經解決）"><a href="#死機問題（已經解決）" class="headerlink" title="死機問題（已經解決）"></a>死機問題（已經解決）</h3><p>這個問題困擾了我一整個2019年下半年，直到今年回學校才解決。死機是怎樣的呢：在低負載的情況下，做日常工作或者打開網頁看視頻的時候忽然閒熒幕凍結，鼠標動不了，按鍵盤沒有任何反應，只能强制重啓才能解決，周而復始。我嘗試了許許多多方法，禁用板載顯卡，使用ddu重新安裝顯卡驅動，核芯顯卡驅動換成intel官方驅動等等。在今年，安裝了官方核心顯卡驅動（不是Dell的魔改驅動）與未插上顯卡的情況下安裝RTX2080ti的驅動成功的解決了這個問題。</p><h3 id="畫面循環卡頓問題"><a href="#畫面循環卡頓問題" class="headerlink" title="畫面循環卡頓問題"></a>畫面循環卡頓問題</h3><p>這個問題也很魔性，畫面循環性間歇卡頓，很迷。</p><h2 id="建議上TB3嗎"><a href="#建議上TB3嗎" class="headerlink" title="建議上TB3嗎"></a>建議上TB3嗎</h2><p>能不上TB3就不上TB3。我這一整套設備下來完全足夠買一個超級本外加一臺與Razer core差不多大小的itx主機，性能又能得到完整的釋放，便携性也得到了保證，豈不美哉？</p><h2 id="2021更新"><a href="#2021更新" class="headerlink" title="2021更新"></a>2021更新</h2><p>TB4在去年發佈了，PCIe通道直接走CPU不走PCH了，好像性能好了很多，但TB到現在還是玄學，感覺還是臺式機靠譜。</p>]]></content>
    
    
    <categories>
      
      <category>技術貼</category>
      
    </categories>
    
    
    <tags>
      
      <tag>eGPU</tag>
      
      <tag>Thunderbolt</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>智能家居初體驗</title>
    <link href="/smart-home/"/>
    <url>/smart-home/</url>
    
    <content type="html"><![CDATA[<p>趁著家裡臥室大改，我就想到了安裝智能家居了。</p><p>智能家居在中國主要以米家為主，但我還想讓其支持homekit，實現雙平台操作，畢竟我家沒有小米手機，都以iOS為主。小愛同學音箱就算了，要就搞一套，不搞兩套。</p><h1 id="購買設備"><a href="#購買設備" class="headerlink" title="購買設備"></a>購買設備</h1><p>能在哪裡買就買，氪爆</p><h2 id="網關"><a href="#網關" class="headerlink" title="網關"></a>網關</h2><p>網關是拿來控制ZigBee協議與藍牙mesh的家具的東西。智能家居有多個牌子，主要有小米，aqara，yeelight。各個品牌既有互通性又有獨立性，以下我會細講。</p><p>我先買了飛利浦筒燈還有小米多模網關，還有個aqara溫濕度傳感器，然而筒燈有問題，我就把燈跟網關換成yeelight牌子的（都退貨了），問題解決後卻發現aqara傳感器不支持這個牌子的網關，把我搞到吐血，然後我得把小米網關再次買回來。</p><h2 id="筒燈"><a href="#筒燈" class="headerlink" title="筒燈"></a>筒燈</h2><p>房間要放一個筒燈，就買了個Philips的智睿筒燈，幾十塊一個，不支持靈動開關（斷電立馬就是完全斷電了），還不支持homekit。由於這個燈直連家裡的WiFi，與網關沒有關係，但體驗真的差。</p><p>然後我買了個yeelight的藍牙mesh筒燈，把之前的拆了，為了能接入homekit，我還買了yeelight網關。這樣才實現了在家庭app控制。</p><h2 id="傳感器"><a href="#傳感器" class="headerlink" title="傳感器"></a>傳感器</h2><p>我買了個aqara溫濕度傳感器，準備與即將到來的中央空調控制器進行聯動。</p><p>還有一個開關門檢測傳感器，可以設置一些智能化，比如開門開某一盞燈持續一段時間。</p><h2 id="床頭燈"><a href="#床頭燈" class="headerlink" title="床頭燈"></a>床頭燈</h2><p>這個我買了個yeelight床頭燈，有RGB，我好了。這個東西也不需要網關。</p><h2 id="Yeelight-RGB燈條"><a href="#Yeelight-RGB燈條" class="headerlink" title="Yeelight RGB燈條"></a>Yeelight RGB燈條</h2><p>氛圍出現了，好看。</p><h2 id="遠程控制"><a href="#遠程控制" class="headerlink" title="遠程控制"></a>遠程控制</h2><p>都說了不要小愛同學了，那就siri吧，於是就去蘋果店買個homepod回家，買音箱送遠程控制（霧</p><h1 id="感受"><a href="#感受" class="headerlink" title="感受"></a>感受</h1><p>發現了第一個問題，設備經常斷聯，所以獨立出一個與5GWiFi不一樣的SSID的2.4G給智能家居用，看看會怎麼樣。<br>第二個問題就是有一些設備有時候會斷綫，因爲這些設備的WiFi天綫並不怎麽好，跟樹莓派内置的差不多。</p><h1 id="後續預告"><a href="#後續預告" class="headerlink" title="後續預告"></a>後續預告</h1><p>家裏大裝修，準備上綠米全家桶，到時候試試最後的效果。</p>]]></content>
    
    
    <categories>
      
      <category>技術貼</category>
      
    </categories>
    
    
    <tags>
      
      <tag>智能家居</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>爲啥我不喜歡寫遊記</title>
    <link href="/travel/"/>
    <url>/travel/</url>
    
    <content type="html"><![CDATA[<p>此文章就當作水文了（不是</p><p>寫遊記寫成之後給別人一個感覺就是攻略。但攻略或者指引在網上找就一大堆，所以自己寫的參考價值並不大。而且每個人的情況不盡相同，大多會東取西取，組合成自己最適合的方案。</p><p>我出去旅遊是沒有計劃的旅遊，出國旅行就只有2點要準備，機票跟酒店。機票與酒店這兩項就可以大概確認出自己要去哪裏玩，玩多少天。其餘的路徑到時再安排。比如有事沒事幹買個當天東京來回仙臺的新幹線的票。玩的開心就好了，沒必要弄那麼多計劃搞得旅遊跟工作一樣了。吃飯的話可以先找要提前預訂的，或者到時再找也不遲。所以我沒有啥好分享的東西。</p><p>其實寫不寫遊記還是得看自己啦，只要自己開心就好了。</p>]]></content>
    
    
    <categories>
      
      <category>吹水日常</category>
      
    </categories>
    
    
    <tags>
      
      <tag>旅遊</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在安裝Arch Linux時上rEFInd引導</title>
    <link href="/refind-arch/"/>
    <url>/refind-arch/</url>
    
    <content type="html"><![CDATA[<p>grub太難看了，rEFInd才好看,我這萌新寫的這些算是我的筆記了。<br>在這裏我用的是Arch Linux安裝脚本安裝系統，省了一堆麻煩，但我沒有用脚本安裝啓動引導，改爲手動安裝。</p><h2 id="分區問題"><a href="#分區問題" class="headerlink" title="分區問題"></a>分區問題</h2><p>掛載boot直接掛在EFI分區（辣雞windows才分配100MB,逼迫我擴容，最好擴容到500MB，要不內核裝不上）就好了</p><div class="note note-warning">            <p>不要掛EFI分區在/boot/efi</p>          </div><h2 id="上引導過程"><a href="#上引導過程" class="headerlink" title="上引導過程"></a>上引導過程</h2><p>在chroot裡面裝上refind然後<code>refind-install</code>之後，編輯<code>/boot/refind-linux.conf</code></p><p>將第一項右邊改為<code>“root=UUID=XXX rw quiet”</code></p><p>uuid的話輸入<code>blkid</code>找root分區的<strong>uuid</strong>而<strong>不是partuuid</strong></p><p>改完之後重啟</p><p>重啟完之後把<code>refind-linux.conf</code>刪掉，再來一次<code>refind-install</code>，這樣就算差不多了</p><p>之後的refind.conf啟動項隨便玩，我就在裡面寫了個arch啟動項，然後把之前的給屏蔽掉了，順便換個主題</p><p>接下來我就來放個我的refind.conf作爲配置例子。（2021更新，其實是防止我又忘了）</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs awk">hexomenuentry <span class="hljs-string">&quot;Arch Linux&quot;</span> &#123;<br>    icon     <span class="hljs-regexp">/EFI/</span>refind<span class="hljs-regexp">/refind-theme-regular/i</span>cons<span class="hljs-regexp">/384-144/</span>os_arch.png<br>    <span class="hljs-comment">#icon大小與主題自行設置</span><br>    volume   <span class="hljs-string">&quot;Arch Linux&quot;</span><br>    loader   /vmlinuz-linux<br>    initrd   /initramfs-linux.img<br>    options  <span class="hljs-string">&quot;root=PARTUUID=114514-1919810-8888888 rw quiet add_efi_memmap&quot;</span><br>    <span class="hljs-comment">#uuid用我上文提到的那個</span><br>    submenuentry <span class="hljs-string">&quot;Boot using fallback initramfs&quot;</span> &#123;<br>        initrd <span class="hljs-regexp">/boot/i</span>nitramfs-linux-fallback.img<br>    &#125;<br>    submenuentry <span class="hljs-string">&quot;Boot to terminal&quot;</span> &#123;<br>        add_options <span class="hljs-string">&quot;systemd.unit=multi-user.target&quot;</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>技術貼</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Refind</tag>
      
      <tag>Arch Linux</tag>
      
      <tag>Bootloader</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在DEBIAN10利用Mcsmanager面板配置Minecraft Sponge Forge服務端</title>
    <link href="/sponge/"/>
    <url>/sponge/</url>
    
    <content type="html"><![CDATA[<p>直接單刀直入，第一篇乾貨。在這裡我直接用<strong>root</strong>用戶，您們巨佬自行酌情加sudo</p><p>我這是在<strong>公網環境</strong>下直接搭建，沒有設置防火牆，就不介紹防火牆內網穿透的一系列操作了，其實是我不會（霧</p><h1 id="1-安裝mcsm面板"><a href="#1-安裝mcsm面板" class="headerlink" title="1.安裝mcsm面板"></a>1.安裝mcsm面板</h1><p>我直接抄官方安裝教程好了(這個官方教程可能已經過時，請參考官網)</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment"># 安装 Node 版本控制工具(若没有 wget，请安装它)</span><br>wget -qO- https:<span class="hljs-regexp">//</span>raw.githubusercontent.com<span class="hljs-regexp">/nvm-sh/</span>nvm<span class="hljs-regexp">/v0.34.0/i</span>nstall.sh | bash<br><span class="hljs-comment"># 请关闭终端重新打开或重新连接终端 再依次执行以下命令（重要！）</span><br><span class="hljs-comment"># 重新打开后：项目支持 8.0.0 版本以上</span><br>nvm install <span class="hljs-number">11.0</span>.<span class="hljs-number">0</span><br><span class="hljs-comment">#使用这个版本</span><br>nvm use <span class="hljs-number">11.0</span>.<span class="hljs-number">0</span><br><span class="hljs-comment"># 克隆仓库(若没有 git，请安装它)</span><br>git clone https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/suwings/m</span>csmanager.git<br><span class="hljs-comment"># 进入目录</span><br>cd mcsmanager/<br><span class="hljs-comment"># 安装依赖库</span><br>npm install<br><span class="hljs-comment"># 启动面板</span><br>sudo npm start <span class="hljs-comment">#或 sudo node app.js </span><br></code></pre></td></tr></table></figure><p>安裝完之後利用screen保證面板持續運行，在這裡我直接把這個screen 命名為1，然後運行面板</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs dos">screen -S <span class="hljs-number">1</span><br><span class="hljs-built_in">cd</span> mcsmanager/<br>npm <span class="hljs-built_in">start</span><br></code></pre></td></tr></table></figure><p>想恢復的話</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">screen</span> -r <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><h1 id="2-安裝java-8"><a href="#2-安裝java-8" class="headerlink" title="2. 安裝java 8"></a>2. 安裝java 8</h1><p>您們不想要forge的話那就直接apt安裝java11就好了。安裝forge的話理論上是用java8（我這個方式是在Minecraft 1.12.2的基礎之上，如果是新的版本的話可能會支持java11），那就按照以下步驟，您們酌情加sudo，聽說用docker更快，但我不會🌚</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs awk">apt install apt-transport-https ca-certificates wget dirmngr gnupg software-properties-common<br><span class="hljs-comment">#安裝防缺軟件包大禮包</span><br>wget -qO - https:<span class="hljs-regexp">//</span>adoptopenjdk.jfrog.io<span class="hljs-regexp">/adoptopenjdk/</span>api<span class="hljs-regexp">/gpg/</span>key/public | apt-key add -<br><span class="hljs-comment">#加個key</span><br>add-apt-repository --yes https:<span class="hljs-regexp">//</span>adoptopenjdk.jfrog.io<span class="hljs-regexp">/adoptopenjdk/</span>deb/<br><span class="hljs-comment">#加個源</span><br>apt update<br><span class="hljs-comment">#更新軟件源</span><br>apt install adoptopenjdk-<span class="hljs-number">8</span>-hotspot<br><span class="hljs-comment">#安裝java8</span><br></code></pre></td></tr></table></figure><p>安裝完之後如果之前有裝java11，那就得切版本</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">update-alternatives --<span class="hljs-built_in">config</span> <span class="hljs-keyword">java</span><br><span class="hljs-keyword"></span><span class="hljs-comment">#然後選數字選你要的版本就好了</span><br><span class="hljs-keyword">java </span>-version<br><span class="hljs-comment">#這是拿來檢查java版本的</span><br></code></pre></td></tr></table></figure><h1 id="3-安裝Minecraft服務端"><a href="#3-安裝Minecraft服務端" class="headerlink" title="3. 安裝Minecraft服務端"></a>3. 安裝Minecraft服務端</h1><p>至此環境已經搭建好了，那就可以開始搭建服務端了。那就先瀏覽器登入面板，地址是 您的ip:23333；賬號密碼是#master，123456</p><p>最首先就是創建一個實例，名稱您隨便設置，那我這邊是new_server，核心文件先空著，後面再來安裝，內存您自行設置，能多大寫多大，數字後面記得加M或G。</p><p>設置好之後，利用在線文件管理上傳Minecraft server還有forge installer</p><p>Minecraft server 核心在<a href="https://mirror.zerodream.net/">這裡</a>下載</p><p>sponge在<a href="https://www.spongepowered.org/downloads/">官網</a>下載</p><p>Minecraft 核心放在文件管理的根目錄，如 minecraft_server.1.12.2.jar 就是放在根目錄，sponge核心放在mods文件夾中。以下根目錄都是表示文件管理的根目錄，除非另有說明<br><img src="/img/sponge/1.jpg" alt="1" title="截圖1"><br>forge installer也是放在根目錄，forge在官網下載，選定你要的mc版本下載installer jar然後放在根目錄，我這就沒有展示installer jar，畢竟已經裝好了的<br><img src="/img/sponge/1.jpg" alt="2" title="截圖2"><br>這3個jar下載位置放好之後，在這個根目錄中放一個<code>eula.txt</code>，裡面寫一句<code>eula=ture</code>，保存。</p><p>然後就進入ssh/控制台，進行forge安裝</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk">cd mcsmanager<span class="hljs-regexp">/server/</span>server_core<span class="hljs-regexp">/您的伺服器名稱/</span><br><span class="hljs-comment">#進入mc服務端目錄</span><br>java -jar forge-你的forge版本號-installer.jar --installServer<br><span class="hljs-comment">#安裝forge</span><br></code></pre></td></tr></table></figure><p>forge到此安裝完成，打開面板的文件管理，複製您的forge universal jar的名字，如forge-1.12.2-14.23.5.2847-universal.jar，在伺服器參數的伺服器核心那裡填入，然後保存。最後就可以開啟伺服器開心遊玩了。</p><p>想加插件mod的話直接扔在mods裡面就好了。</p><p>其實會完全操作wget的話就不需要文件管理了.</p><h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><ul><li><a href="https://linuxize.com/post/install-java-on-debian-10/">https://linuxize.com/post/install-java-on-debian-10/</a></li><li><a href="https://www.vultr.com/docs/installing-sponge-and-minecraft-forge-on-debian-9">https://www.vultr.com/docs/installing-sponge-and-minecraft-forge-on-debian-9</a></li><li><a href="https://github.com/Suwings/MCSManager/wiki/Linux-%E4%B8%8B%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%A7%A3">https://github.com/Suwings/MCSManager/wiki/Linux-%E4%B8%8B%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%A7%A3</a></li><li><a href="https://www.mcbbs.net/forum.php?mod=viewthread&amp;tid=786074&amp;extra=&amp;page=1&amp;mobile=2">https://www.mcbbs.net/forum.php?mod=viewthread&amp;tid=786074&amp;extra=&amp;page=1&amp;mobile=2</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>技術貼</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Debian</tag>
      
      <tag>Mcsmanager</tag>
      
      <tag>Minecraft</tag>
      
      <tag>Sponge</tag>
      
      <tag>Forge</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>第一篇</title>
    <link href="/first-article/"/>
    <url>/first-article/</url>
    
    <content type="html"><![CDATA[<p>悶聲發大財，這是最吼的。</p>]]></content>
    
    
    <categories>
      
      <category>吹水日常</category>
      
    </categories>
    
    
    <tags>
      
      <tag>第一篇</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
